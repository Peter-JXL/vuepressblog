var __getOwnPropNames = Object.getOwnPropertyNames;
var __esm = (fn, res) => function __init() {
  return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;
};
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};

// docs/.vuepress/config/head.ts
var head_default;
var init_head = __esm({
  "docs/.vuepress/config/head.ts"() {
    head_default = [
      ["link", { rel: "icon", href: "https://image.peterjxl.com/blog/re0.jpg" }],
      ["meta", { name: "keywords", content: "\u8BA1\u7B97\u673A\u57FA\u7840 \u64CD\u4F5C\u7CFB\u7EDF \u8BA1\u7B97\u673A\u7F51\u7EDC Java" }],
      ["meta", { name: "viewport", content: "width=device-width, initial-scale=1" }],
      [
        "script",
        {},
        `
        var _hmt = _hmt || [];
        (function() {
          var hm = document.createElement("script");
          hm.src = "https://hm.baidu.com/hm.js?935c298d3de674300e25695d1ece4c34";
          var s = document.getElementsByTagName("script")[0]; 
          s.parentNode.insertBefore(hm, s);
        })();
      <\/script>
      `
      ],
      ["meta", { name: "referrer", content: "no-referrer-when-downgrade" }],
      ["link", { rel: "stylesheet", href: "https://at.alicdn.com/t/font_3077305_pt8umhrn4k9.css" }],
      ["script", { src: "https://cdn.staticfile.org/twikoo/1.6.7/twikoo.all.min.js" }]
    ];
  }
});

// docs/.vuepress/webSiteInfo/readFile.ts
import fs from "fs";
import path from "path";
import matter from "gray-matter";
import chalk from "chalk";
function readFileList(excludeFiles = [""], dir = docsRoot, filesList = []) {
  const files = fs.readdirSync(dir);
  files.forEach((item, index) => {
    let filePath = path.join(dir, item);
    const stat = fs.statSync(filePath);
    if (!(excludeFiles instanceof Array)) {
      log(chalk.yellow(`error: \u4F20\u5165\u7684\u53C2\u6570\u4E0D\u662F\u4E00\u4E2A\u6570\u7EC4\u3002`));
    }
    excludeFiles.forEach((excludeFile) => {
      if (stat.isDirectory() && item !== ".vuepress" && item !== "@pages" && item !== excludeFile) {
        readFileList(excludeFiles, path.join(dir, item), filesList);
      } else {
        if (path.basename(dir) !== "docs") {
          const fileNameArr = path.basename(filePath).split(".");
          let name = null, type = null;
          if (fileNameArr.length === 2) {
            name = fileNameArr[0];
            type = fileNameArr[1];
          } else if (fileNameArr.length === 3) {
            name = fileNameArr[1];
            type = fileNameArr[2];
          } else {
            log(chalk.yellow(`warning: \u8BE5\u6587\u4EF6 "${filePath}" \u6CA1\u6709\u6309\u7167\u7EA6\u5B9A\u547D\u540D\uFF0C\u5C06\u5FFD\u7565\u751F\u6210\u76F8\u5E94\u6570\u636E\u3002`));
            return;
          }
          if (type === "md") {
            filesList.push({
              name,
              filePath
            });
          }
        }
      }
    });
  });
  return filesList;
}
function readEachFileWords(excludeFiles = [""], cn, en) {
  const filesListWords = [];
  const filesList = readFileList(excludeFiles);
  filesList.forEach((item) => {
    const content = getContent(item.filePath);
    let len = counter(content);
    let readingTime = readTime(len, cn, en);
    let wordsCount = 0;
    wordsCount = len[0] + len[1];
    if (wordsCount >= 1e3) {
      wordsCount = Math.round(wordsCount / 100) / 10 + "k";
    }
    const fileMatterObj = matter(content, {});
    const matterData = fileMatterObj.data;
    filesListWords.push({ ...item, wordsCount, readingTime, ...matterData });
  });
  return filesListWords;
}
function readTime(len, cn = 300, en = 160) {
  let readingTime = len[0] / cn + len[1] / en;
  if (readingTime > 60 && readingTime < 60 * 24) {
    let hour = Math.trunc(readingTime / 60);
    let minute = Math.trunc(readingTime - hour * 60);
    if (minute === 0) {
      return hour + "h";
    }
    return hour + "h" + minute + "m";
  } else if (readingTime > 60 * 24) {
    let day = Math.trunc(readingTime / (60 * 24));
    let hour = Math.trunc((readingTime - day * 24 * 60) / 60);
    if (hour === 0) {
      return day + "d";
    }
    return day + "d" + hour + "h";
  }
  return readingTime < 1 ? "1" : Math.trunc(readingTime * 10) / 10 + "m";
}
function getContent(filePath) {
  return fs.readFileSync(filePath, "utf8");
}
function counter(content) {
  const cn = (content.match(/[\u4E00-\u9FA5]/g) || []).length;
  const en = (content.replace(/[\u4E00-\u9FA5]/g, "").match(/[a-zA-Z0-9_\u0392-\u03c9\u0400-\u04FF]+|[\u4E00-\u9FFF\u3400-\u4dbf\uf900-\ufaff\u3040-\u309f\uac00-\ud7af\u0400-\u04FF]+|[\u00E4\u00C4\u00E5\u00C5\u00F6\u00D6]+|\w+/g) || []).length;
  return [cn, en];
}
var log, docsRoot;
var init_readFile = __esm({
  "docs/.vuepress/webSiteInfo/readFile.ts"() {
    log = console.log;
    docsRoot = path.join("D:\\Projects\\vuepressblog\\docs\\.vuepress\\webSiteInfo", "..", "..", "..", "docs");
  }
});

// docs/.vuepress/config/themeConfig.ts
var themeConfig_default;
var init_themeConfig = __esm({
  "docs/.vuepress/config/themeConfig.ts"() {
    init_readFile();
    themeConfig_default = {
      logo: "https://image.peterjxl.com/blog/re0.jpg",
      nav: [
        { text: "\u9996\u9875", link: "/" },
        {
          text: "\u8BA1\u7B97\u673A\u57FA\u7840",
          ariaLabel: "program",
          items: [
            { text: "\u8BA1\u7B97\u673A\u79D1\u5B66\u5BFC\u8BBA", link: "/ComputerHistory/" },
            { text: "\u64CD\u4F5C\u7CFB\u7EDF", link: "/ComputerOS/" },
            { text: "Linux", link: "/Linux/" },
            { text: "\u8BA1\u7B97\u673A\u7F51\u7EDC", link: "/Network/" },
            { text: "\u8BA1\u7B97\u673A\u5E38\u8BC6", link: "/literacy/" }
          ]
        },
        {
          text: "Java",
          ariaLabel: "Java",
          link: "/Java",
          items: [
            { text: "JavaSE", link: "/JavaSE/" },
            { text: "JavaEE", link: "/JavaEE/" },
            { text: "JavaWeb", link: "/JavaWeb/" }
          ]
        },
        {
          text: "\u5176\u4ED6",
          link: "/About",
          items: [
            { text: "\u5173\u4E8E\u672C\u7AD9", link: "/About/Web/" },
            { text: "\u7F51\u7AD9\u65E5\u8BB0", link: "/About/WebLog/" },
            { text: "\u53CB\u4EBA\u5E10", link: "/About/friend-link/" },
            { text: "\u5982\u4F55\u642D\u5EFA\u4E00\u4E2A\u535A\u5BA2", link: "/About/BuildBlog/" },
            { text: "\u5982\u4F55\u642D\u5EFA\u4E00\u4E2A\u90AE\u7BB1", link: "/About/BuildMail/" }
          ]
        }
      ],
      sidebar: "structuring",
      footer: {
        createYear: 2022,
        copyrightInfo: `<a href='https://beian.miit.gov.cn'>\u7CA4ICP\u59072022067627\u53F7-1</a>  
    <img src='https://image.peterjxl.com/blog/beian.png'>
    <a href='http://www.beian.gov.cn/portal/registerSystemInfo?recordcode=44011302003646'>\u7CA4\u516C\u7F51\u5B89\u5907 44011302003646\u53F7</a>
    `
      },
      lastUpdated: "\u4E0A\u6B21\u66F4\u65B0",
      updateBar: {
        showToArticle: false,
        moreArticle: "/archives/"
      },
      repo: "Peter-JXL/vuepressblog",
      docsDir: "docs",
      editLinks: true,
      editLinkText: "\u5728GitHub\u4E0A\u7F16\u8F91\u6B64\u9875",
      algolia: {
        appId: "HFCGE1I7YO",
        apikey: "557697d1f20e77362b502b71ecf41e2a",
        indexName: "peterjxl"
      },
      bodyBgImg: [
        "https://image.peterjxl.com/backgruond-city.jpg"
      ],
      bodyBgImgOpacity: 1,
      indexImg: {
        navColor: 2,
        switchNavColor: true,
        bgTimeColor: true,
        bgTimeColorArray: ["transparent", "rgba(0, 0, 0, .3)", "rgba(0, 0, 0, .3)", "rgba(0, 0, 0, .5)"],
        descFade: true,
        desc: [
          "\u90A3\u5C31\u4ECE\u96F6\u5F00\u59CB\u3002"
        ],
        descFontSize: "1.4rem",
        descFadeInTime: 200,
        descFadeOutTime: 100,
        descNextTime: 800,
        bubble: false,
        bubblePosition: 0,
        bubbleNum: 200
      },
      blogInfo: {
        blogCreate: "2022-04-01",
        indexView: true,
        pageView: true,
        readingTime: true,
        eachFileWords: readEachFileWords([""], 300, 160),
        mdFileCountType: "archives",
        totalWords: "archives",
        moutedEvent: ".categories-wrapper",
        indexIteration: 2500,
        pageIteration: 2500
      },
      blogger: {
        avatar: "https://image.peterjxl.com/blog/re0.jpg",
        name: "peterjxl",
        slogan: "\u4EBA\u751F\u5982\u9006\u65C5,\u6211\u4EA6\u662F\u884C\u4EBA"
      },
      social: {
        icons: [
          {
            iconClass: "icon-github",
            title: "GitHub",
            link: "https://github.com/Peter-JXL"
          },
          {
            iconClass: "icon-gitee",
            title: "Gitee",
            link: "https://gitee.com/peterjxl"
          },
          {
            iconClass: "icon-youjian",
            title: "\u8054\u7CFB\u6211",
            link: "mailto:peterjxl@qq.com"
          }
        ]
      }
    };
  }
});

// docs/.vuepress/config/plugins.ts
var plugins_default;
var init_plugins = __esm({
  "docs/.vuepress/config/plugins.ts"() {
    plugins_default = [
      "@vuepress/last-updated",
      ["vuepress-plugin-code-copy", true],
      "reading-progress",
      [
        "copyright",
        {
          noCopy: true,
          authorName: "\u7A0B\u5E8F\u72D7",
          minLength: 30
        }
      ],
      [
        "cursor-effects",
        {
          size: 2,
          shape: "star",
          zIndex: 999999999
        }
      ],
      ["dynamic-title", {
        showText: "\u6B22\u8FCE\u56DE\u6765  O(\u2229_\u2229)O~~",
        hideText: "\u7B49\u7B49\uFF0C\u4F60\u522B\u8D70\u554A ::>_<::",
        recoverTime: 2e3
      }],
      ["@vuepress/active-header-links"],
      [
        {
          name: "custom-plugins",
          clientAppRootComponentFiles: ["PageInfo"]
        }
      ],
      [
        "vuepress-plugin-zooming",
        {
          selector: ".theme-vdoing-content img:not(.no-zoom)",
          options: {
            bgColor: "rgba(0,0,0,0.6)"
          }
        }
      ],
      [
        "sitemap",
        {
          hostname: "https://www.peterjxl.com"
        }
      ],
      [
        "@vuepress/google-analytics",
        {
          "ga": "G-8PPPBTJ1HM"
        }
      ],
      [
        "autometa",
        {
          site: {
            name: "peterjxl"
          },
          canonical_base: "https://www.peterjxl.com"
        }
      ],
      {
        name: "custom-plugins",
        globalUIComponents: ["Twikoo"]
      },
      [
        "vuepress-plugin-helper-live2d",
        {
          live2d: {
            enable: true,
            model: "hijiki",
            display: {
              position: "left",
              width: 135,
              height: 300,
              hOffset: 65,
              vOffset: 0
            },
            mobile: {
              show: false
            },
            react: {
              opacity: 0.8
            }
          }
        }
      ]
    ];
  }
});

// docs/.vuepress/config.ts
var require_config = __commonJS({
  "docs/.vuepress/config.ts"(exports, module) {
    init_head();
    init_themeConfig();
    init_plugins();
    module.exports = {
      title: "\u4ECE01\u5F00\u59CB",
      theme: "vdoing",
      description: "\u8BA1\u7B97\u673A\u6280\u672F\u535A\u5BA2",
      locales: {
        "/": {
          lang: "zh-CN"
        }
      },
      head: head_default,
      themeConfig: themeConfig_default,
      plugins: plugins_default
    };
  }
});
export default require_config();
//# sourceMappingURL=data:application/json;base64,
