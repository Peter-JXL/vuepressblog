name: Deploy My Server

on:
  push:
    branches:
      - master # 在 master 分支上 push 后触发

# 2个job，build 用于构建 + 部署，scrape-docs 用于更新美丽云的搜索引擎数据库
jobs:
  build:
    runs-on: ubuntu-latest
    steps: 
      # 下载 GitHub 项目
      - name: Checkout
        uses: actions/checkout@v1 
      
      # 使用 action 库，安装指定版本的 node
      - name: use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      # 安装依赖和构建项目
      - name: npm install 
        run: npm install && npm run build


      # 部署项目
      - name: Deploy to Staging My server
        uses: easingthemes/ssh-deploy@v2.1.6
        env:
          REMOTE_HOST: ${{ secrets.MY_SERVER_IP }}   # 服务器公网地址      
          REMOTE_USER: ${{ secrets.MY_SERVER_USER }} # 服务器用户名，默认 root
          REMOTE_PORT: ${{  secrets.MY_SERVER_PORT }}  # 服务器端口，默认 22
          SSH_PRIVATE_KEY: ${{ secrets.MYSERVER }}     # 后面指定为该仓库配置的私钥
          SOURCE: './docs/.vuepress/dist/'             # 源目录，编译后生成的文件目录
          TARGET: '/opt/myblog'                        # 服务器中的网站位置
          EXCLUDE: "/dist/, /node_modules/"
          ARGS: "-rltgoDzvO"
  scrape-docs:
    needs: build
    runs-on: ubuntu-20.04
    steps:
        - uses: actions/checkout@v2
        - uses: actions/setup-node@v2
          with:
              node-version: 14
              registry-url: https://registry.npmjs.org/
        - name: Run docs-scraper
          env:
              API_KEY: ${{ secrets.MEILISEARCH_API_KEY }}
              CONFIG_FILE_PATH: ${{ github.workspace }}/docs/.vuepress/config/docs-scraper-config.json
          run: |
              docker run -t --rm \
                -e MEILISEARCH_HOST_URL="https://search.peterjxl.com" \
                -e MEILISEARCH_API_KEY=$API_KEY \
                -v $CONFIG_FILE_PATH:/docs-scraper/config.json \
                getmeili/docs-scraper:v0.12.7 pipenv run ./docs_scraper config.json          