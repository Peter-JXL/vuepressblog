name: Deploy My Server

on:
  push:
    branches:
      - master # 只在master上push触发部署

# 2个job，build用于构建+部署，scrape-docs是美丽云的搜索引擎数据库更新
jobs:
  build:
    runs-on: ubuntu-latest # 使用ubuntu系统镜像运行自动化脚本
    steps: 
      # 下载GitHub项目
      - name: Checkout
        uses: actions/checkout@v1 
      
      # 使用action库，安装node
      - name: use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      # 安装依赖和构建项目
      - name: npm install 
        run: npm install && npm run build


      # 部署项目
      - name: Deploy to Staging My server
        uses: easingthemes/ssh-deploy@v2.1.6
        env:
          REMOTE_HOST: ${{ secrets.MY_SERVER_IP }}   # 服务器公网地址      
          REMOTE_USER: ${{ secrets.MY_SERVER_USER }} # 服务器用户名，默认root
          REMOTE_PORT: ${{  secrets.MY_SERVER_PORT }}  # 服务器端口，默认22
          SSH_PRIVATE_KEY: ${{ secrets.MYSERVER }} #后面指定为该仓库配置的私钥
          SOURCE: './docs/.vuepress/dist/'  # 源目录，编译后生成的文件目录
          TARGET: '/opt/myblog' #服务器中，代码部署的位置
          EXCLUDE: "/dist/, /node_modules/"
          ARGS: "-rltgoDzvO"
  scrape-docs:
    needs: build
    runs-on: ubuntu-20.04
    steps:
        - uses: actions/checkout@v2
        - uses: actions/setup-node@v2
          with:
              node-version: 14
              registry-url: https://registry.npmjs.org/
        - name: Run docs-scraper
          env:
              API_KEY: ${{ secrets.MEILISEARCH_API_KEY }}
              CONFIG_FILE_PATH: ${{ github.workspace }}/docs/.vuepress/config/docs-scraper-config.json
          run: |
              docker run -t --rm \
                -e MEILISEARCH_HOST_URL="https://search.peterjxl.com" \
                -e MEILISEARCH_API_KEY=$API_KEY \
                -v $CONFIG_FILE_PATH:/docs-scraper/config.json \
                getmeili/docs-scraper:v0.12.7 pipenv run ./docs_scraper config.json          